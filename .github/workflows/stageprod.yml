name: Terraform CI/CD stage_prod

on:
  pull_request:
    branches:
      - prod

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  WORKING_DIR: ./Module07

jobs:
  merge_to_prod:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform init dev
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform workspace select or create dev
        run: terraform workspace select dev || terraform workspace new dev
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform apply dev
        run: terraform apply -auto-approve
        working-directory: ${{ env.WORKING_DIR }}

  stage_tests:
    needs: merge_to_prod
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform init stage
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform workspace select or create stage
        run: terraform workspace select stage || terraform workspace new stage
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform apply stage
        run: terraform apply -auto-approve
        working-directory: ${{ env.WORKING_DIR }}

      - name: Run TFSec workflow
        uses: ./.github/workflows/validate.yml

  prod_tests:
    needs: stage_tests
    runs-on: ubuntu-latest
    environment: 
      name: production
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform init prod
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform workspace select or create prod
        run: terraform workspace select prod || terraform workspace new prod
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform apply prod
        run: terraform apply -auto-approve
        working-directory: ${{ env.WORKING_DIR }}