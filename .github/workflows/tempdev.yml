name: Terraform CI/CD temp_dev

on:
  push:
    branches-ignore:
      - 'prod'
      - 'stage'
      - 'dev'
    paths:
      - 'Module07/**'
  workflow_dispatch:

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  WORKING_DIR: ./Module07

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Terraform init
        id: init
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}          

      - name: Terraform Format
        id: format
        run: terraform fmt
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform validate
        id: validate
        run: terraform validate
        working-directory: ${{ env.WORKING_DIR }}

  tfsec:
    needs: validate
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under so your job can access it
      - uses: actions/checkout@master
      - name: tfsec
        # You may pin to the exact commit or the version.
        # uses: aquasecurity/tfsec-action@b466648d6e39e7c75324f25d83891162a721f2d6
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          # Directory to run the action on, from the repo root. Default is . (root of the repository)
          working_directory: ${{ env.WORKING_DIR }}
          github_token: ${{ secrets.PAT_TOKEN }}
          soft_fail: true
        # Space separated args specified here will be added during tfsec execution.
        # (eg. --force-all-dirs --verbose)
  
  merge-to-dev:
    needs: tfsec
    runs-on: ubuntu-latest
    steps:
      - name: Merge to Dev
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          BASE_URL="https://api.github.com/repos/Henriwle/github-terraform2"
          CURRENT_BRANCH="${GITHUB_REF#refs/heads/}"
          RESPONSE=$(curl -X POST -H "Authorization: token $GITHUB_TOKEN" -d '{"base": "dev", "head": "'"$CURRENT_BRANCH"'", "commit_message": "Merge $CURRENT_BRANCH into dev"}' "$BASE_URL/pulls")
          PR_URL=$(echo "$RESPONSE" | jq -r .url)
          echo "Pull request URL: $PR_URL"

      - name: Merge Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BASE_URL="https://api.github.com/repos/Henriwle/github-terraform2"
          PR_NUMBER=$(curl -H "Authorization: token $GITHUB_TOKEN" "$BASE_URL/pulls" | jq -r '.[] | select(.head.ref == "'"$CURRENT_BRANCH"'") | .number')
          if [ "$PR_NUMBER" ]; then
            RESPONSE=$(curl -X PUT -H "Authorization: token $GITHUB_TOKEN" -d '{"commit_title": "Merge pull request", "merge_method": "merge"}' "$BASE_URL/pulls/$PR_NUMBER/merge")
            echo "Pull request merged: $PR_NUMBER"
          else
            echo "Pull request not found."
          fi